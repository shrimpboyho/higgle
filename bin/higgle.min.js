!function(){Array.prototype.insert=function(element){this.push(element)},Array.prototype.matchQuery=function(doc,query){console.log("Query:"),console.log(query);var i,queryKeys=Object.keys(query),queryValues=[];for(i=0;i<queryKeys.length;i++)queryValues.push(query[queryKeys[i]]);var docKeys=Object.keys(doc),docValues=[];for(i=0;i<docKeys.length;i++)docValues.push(doc[docKeys[i]]);var k;for(i=0;i<docKeys.length;i++)for(k=0;k<queryKeys.length;k++)if(docKeys[i]==queryKeys[k]&&docValues[i]==queryValues[k])return!0;return!1},Array.prototype.find=function(query,callback){if(!query||"{}"===JSON.stringify(query))return this;var i,result=[];for(i=0;i<this.length;i++){console.log("Current document:");var currentDoc=this[i];console.log(currentDoc),result.matchQuery(currentDoc,query)&&result.push(currentDoc)}if(0!==result.length){if(!callback)return result;callback(result)}else{if(!callback)return result;callback(!1)}},this.Higgle=function(){this.collections=[]},Higgle.prototype.createCollection=function(name){this.collections.push([name,[]])},Higgle.prototype.collection=function(name,callback){var i;for(i=0;i<this.collections.length;i++)if(name==this.collections[i][0]){if(!callback)return this.collections[i][1];callback(this.collections[i][1])}return callback?(callback(!1),void 0):!1},Higgle.prototype.close=function(){return!0}}(this),module.exports.Higgle=Higgle;